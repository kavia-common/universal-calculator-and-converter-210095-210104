{"is_source_file": true, "format": "JavaScript", "description": "This file provides utility functions for formatting numbers, parsing input, and handling temperature units. It includes functions for safe number formatting, input parsing, and label retrieval for temperature units. The code is designed to be used as a utility module in a larger application, likely for a frontend or data visualization project.", "external_files": ["./constants"], "external_methods": ["TEMPERATURE_UNIT_LABELS", "TEMPERATURE_UNITS"], "published": ["formatNumber", "toFixedSafe", "parseNumericInput", "getTemperatureUnitLabel", "formatWithUnit", "isSupportedTemperatureUnit"], "classes": [], "methods": [{"name": "isFiniteNumber(v)", "description": "Internal helper to check if a value is a finite number", "scope": "", "scopeKind": ""}, {"name": "formatNumber(value, options = {})", "description": "Formats a number using Intl.NumberFormat if available, with fallback support, ensuring safe formatting of numbers", "scope": "", "scopeKind": ""}, {"name": "toFixedSafe(value, fractionDigits)", "description": "Provides a safe implementation of toFixed, guarding against invalid inputs and limiting decimal places", "scope": "", "scopeKind": ""}, {"name": "parseNumericInput(input)", "description": "Parses a string or number input into a finite number, handling whitespace and common thousands separators", "scope": "", "scopeKind": ""}, {"name": "getTemperatureUnitLabel(unit)", "description": "Returns a user-friendly label (e.g., '\u00b0C') for a given temperature unit code", "scope": "", "scopeKind": ""}, {"name": "formatWithUnit(value, unit, options = {})", "description": "Formats a numeric value with a temperature unit label", "scope": "", "scopeKind": ""}, {"name": "isSupportedTemperatureUnit(unit)", "description": "Checks if a given unit is a supported temperature unit (C, F, K)", "scope": "", "scopeKind": ""}], "calls": ["Intl.NumberFormat", "Number.parseFloat", "Number.isFinite", "String.prototype.toUpperCase", "String.prototype.trim"], "search-terms": ["formatNumber", "parseNumericInput", "getTemperatureUnitLabel", "formatWithUnit", "temperature units", "number formatting", "safe number formatting", "unit labels", "utilities"], "state": 2, "file_id": 32, "knowledge_revision": 75, "git_revision": "", "ctags": [{"_type": "tag", "name": "formatNumber", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^export function formatNumber(value, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(value, options = {})"}, {"_type": "tag", "name": "formatWithUnit", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^export function formatWithUnit(value, unit, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(value, unit, options = {})"}, {"_type": "tag", "name": "getTemperatureUnitLabel", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^export function getTemperatureUnitLabel(unit) {$/", "language": "JavaScript", "kind": "function", "signature": "(unit)"}, {"_type": "tag", "name": "isFiniteNumber", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^function isFiniteNumber(v) {$/", "language": "JavaScript", "kind": "function", "signature": "(v)"}, {"_type": "tag", "name": "isSupportedTemperatureUnit", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^export function isSupportedTemperatureUnit(unit) {$/", "language": "JavaScript", "kind": "function", "signature": "(unit)"}, {"_type": "tag", "name": "parseNumericInput", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^export function parseNumericInput(input) {$/", "language": "JavaScript", "kind": "function", "signature": "(input)"}, {"_type": "tag", "name": "toFixedSafe", "path": "/home/kavia/workspace/code-generation/universal-calculator-and-converter-210095-210104/calculator_frontend/src/utils/formatters.js", "pattern": "/^export function toFixedSafe(value, fractionDigits) {$/", "language": "JavaScript", "kind": "function", "signature": "(value, fractionDigits)"}], "hash": "2d08bc13901ac33334ae8f618801d7a6", "format-version": 4, "code-base-name": "calculator_frontend", "filename": "calculator_frontend/src/utils/formatters.js", "revision_history": [{"75": ""}]}